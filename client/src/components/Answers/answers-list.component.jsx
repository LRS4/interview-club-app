import React, { Component } from 'react';
import { connect } from 'react-redux';
import { removeAnswer } from './../../actions/questionsActions';
import { Link } from 'react-router-dom';
import Answer from './answer-item.component';
import { MDBContainer, MDBCol, MDBRow, MDBBtn, MDBIcon } from 'mdbreact';
import '../Questions/questions-list.component.scss'
var moment = require('moment');

class AnswersList extends Component {

    // Replaced with call to Redux store
    // componentDidMount = () => {
    //     axios.get('/questions/' + this.props.match.params.qid)
    //         .then(response => {
    //             this.setState({
    //                 question: response.data
    //             });
    //         })
    //         .catch(error => {
    //             console.log("Error: " + error);
    //         });
    // }

    deleteAnswer = (id) => {
        // Update redux store state (_id is autogenerated by MongoDB)
        this.props.removeAnswer(this.props.match.params.qid, id);
    }

    createAnswerPanels = () => {
        if (this.props.question.answers !== undefined) {
            let answers = this.props.question.answers.sort((a, b) => {
                return (
                    moment().diff(moment(a.createdAt), 'minutes', false) -
                    moment().diff(moment(b.createdAt), 'minutes', false)
                )
            });
            return answers.map(answer => {
                return (
                    <Answer 
                        qid={this.props.match.params.qid}
                        answer={answer}
                        deleteAnswer={this.deleteAnswer}
                        key={answer._id}
                    />
                );
            })
        } 
    }

    render() {
        return (
            this.props.question === undefined ? window.location = '/' :
            <MDBContainer>
                <MDBRow>
                    <MDBCol md="4" />
                    <MDBCol md="4">
                        <Link className="text-center" to={"/create/" + this.props.match.params.qid}>
                            <MDBBtn className="interviewClubBtn" color="pink" size="md" style={{ width: "100%" }}>
                                <MDBIcon icon="rocket" style={{ marginRight: "10px" }} />
                                Add New Answer
                            </MDBBtn>  
                        </Link>  
                    </MDBCol>
                    <MDBCol md="4" />
                </MDBRow>
                <MDBRow className="d-flex justify-content-center">
                    <h1>{ this.props.question.text }</h1>
                </MDBRow>
                { this.createAnswerPanels() }  
            </MDBContainer>
        )
    }
}

const mapStateToProps = (state, ownProps) => {
    let id = String(ownProps.match.params.qid);
    return {
        question: state.questions.questions.find(question => question._id === id)
    }
}

const mapDispatchToProps = (dispatch) => {
    return {
        removeAnswer: (qid, id) => dispatch(removeAnswer(qid, id))
    };
}

export default connect(mapStateToProps, mapDispatchToProps)(AnswersList);